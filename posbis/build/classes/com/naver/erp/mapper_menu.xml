<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
   <!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
   <!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->

<mapper namespace="com.naver.erp.MenuDAO">


<!-- 메뉴 목록 구하는 조건문 설정 -->
<!-- sql태그 안에 있는 id는 마음대로 지정해도된다. -->
<sql id="menuWhere">


	<if test="keyword!=null and keyword.length()>0">

		and(
			upper(business_name) like upper('%${keyword}%')
			or upper(main_category_name) like upper('%${keyword}%')
			or upper(mid_category_name) like upper('%${keyword}%')
			or upper(sub_category_name) like upper('%${keyword}%')
			or upper(menu_price) like upper('%${keyword}%')
			or upper(menu_cost) like upper('%${keyword}%')
			or upper(menu_name) like upper('%${keyword}%')
		)
		
	</if>
	
	<!-- 선택한 사업자 번호 구하는 조건문 설정 -->
	<if test="chooseBusinessNo!=null and chooseBusinessNo.length>0">
		and m.business_no in
			<foreach collection="chooseBusinessNo" item="chooseBusinessNo" open="(" close=")"  separator=",">
				#{chooseBusinessNo}
			</foreach>
	</if>
	
	<if test='menu_using=="Y" or menu_using=="N"'>
		 and menu_using=#{menu_using}
	</if>



</sql>


<!-- 메뉴 리스트 select -->
<!-- 2020-01-09 수정 -->
<!--**************************************************************************-->
  <select id="getMenuList" parameterType="com.naver.erp.MenuSearchDTO" resultType="java.util.HashMap">
	select * from(select zzz.*, rownum RNUM from(
		select
		    b.business_no                          "business_no"
		    , b.business_name                      "business_name"
		    , m.menu_no                           "menu_no"
		    , m.menu_name                         "menu_name"
		    , c.main_category_name                "main_category_name"
		    , c.mid_category_name                  "mid_category_name"
		    , c.sub_category_name                  "sub_category_name"
		    , m.menu_price                         "menu_price"
		    , m.menu_cost                          "menu_cost"
		    ,(m.menu_price-m.menu_cost)            "menu_avail"
		    , m.menu_using                        "menu_using"
		from menu m, business_info b, code_menu_category c, user_info u
		where 
		    1=1
			and b.business_no = m.business_no and u.user_id=#{user_id}
		    and u.u_no = b.u_no and m.menu_category_code = c.menu_category_code
	    	<include refid="menuWhere"/>
	    	order by ${sort}
		) zzz ) where 
			<![CDATA[
				RNUM>= ${selectPageNo*rowCntPerPage-rowCntPerPage+1}
				and RNUM<= ${selectPageNo*rowCntPerPage}
			]]>
   </select>

   <!-- 메뉴 목록 총 개수 구하는  select 태그 선언-->
	<select id="getMenuListAllCnt" parameterType="com.naver.erp.MenuSearchDTO" resultType="int">

	select 
	  count(*)
	from menu m, business_info b, code_menu_category c, user_info u
	where 
	    1=1
		and b.business_no = m.business_no and u.user_id=#{user_id}
	    and u.u_no = b.u_no and m.menu_category_code = c.menu_category_code
		<include refid="menuWhere"/>
	</select>
 <!-- 2020-01-09 수정 끝--> 
  
	<!-- 메뉴 기본 정보 입력하는 insert 문을 내포한 insert 태그 선언-->
	<insert id="insertMenu" parameterType="com.naver.erp.MenuDTO" >
		
		insert into menu(
					menu_no
					, business_no
					, menu_name
					, menu_price
					, menu_cost
					, menu_category_code
					, menu_using
			)values(
					(select nvl(max(menu_no),0)+1 from menu)
					,( select business_no
						from business_info 
						where 1=1 and business_no=#{business_no})
					, #{menu_name}
					, ${menu_price}
					, ${menu_cost}
					, (select menu_category_code from code_menu_category
					        where
					        	main_category_name=#{main_category_name}
					        	and mid_category_name=#{mid_category_name}
					        	and sub_category_name=#{sub_category_name})
					,'Y'
   		)
   		
	</insert>
	

	<!-- 사업자 번호 가져오기 -->
	<select id='getBusinessNoList' parameterType="int" resultType="java.util.HashMap">
	   select 
	      business_no as "business_no" 
	      , business_name as "business_name"
	      
	   from business_info 
	      where 
	         1=1 
	         and u_no=#{u_no}
	</select>
	
 <select id="getMenuDTO" parameterType="int" resultType="com.naver.erp.MenuDTO">
	select 
		menu_no			"menu_no"
		,c.main_category_name		"main_category_name"
		,c.mid_category_name		"mid_category_name"
		,c.sub_category_name		"sub_category_name"
		,m.menu_name     			"menu_name"
		,m.menu_price				"menu_price"
		,m.menu_cost				"menu_cost"
		,m.menu_using				"menu_using"
	from menu m  left join code_menu_category c on m.menu_category_code = c.menu_category_code
	    left join business_info b on b.business_no=m.business_no where menu_no=#{menu_no}
   </select>

	<!-- 메뉴 수정 후 수정행의 적용개수를 리턴하는 메소드 선언-->
	<update id="updateMenu" parameterType="com.naver.erp.MenuDTO">
		update menu set 
			menu_name=#{menu_name}
			, menu_price=#{menu_price}
			, menu_cost=#{menu_cost}
			, menu_category_code=(select menu_category_code from code_menu_category
					        where
					        	main_category_name=#{main_category_name}
					        	and mid_category_name=#{mid_category_name}
					        	and sub_category_name=#{sub_category_name})
			, menu_using=#{menu_using}
		where menu_no=#{menu_no}
	</update>


	<!-- 삭제/수정 메뉴의 존재개수를 리턴하는 select 선언-->
	<select id="getMenuCnt" resultType="int" parameterType="com.naver.erp.MenuDTO">
		select count(*) from menu where menu_no=#{menu_no}
	</select>
	
	<!-- user_id 로  u_no 가져오기 -->
	<select id='getUserNo' parameterType="String" resultType="int">   
		select u_no from user_info where user_id=#{user_id}
	</select>
	
	<!-- 삭제할 메뉴의 존재개수를 리턴하는 select 선언-->
	<delete id="deleteMenu" parameterType="com.naver.erp.MenuDTO">
		delete from menu where menu_no=#{menu_no}
	</delete>

   <!-- 대분류 데이터 가져오기 -->
   <select id='getMenuCategory1' resultType="java.util.HashMap">
      select
         distinct main_category_name        as "main_category_name"
       from code_menu_category
      where 1=1
   </select>

   <!-- 중분류 데이터 가져오기 -->
   <select id='getMenuCategory2' resultType="String" parameterType="String"  >
      select   
         distinct mid_category_name      as "mid_category_name"
       from code_menu_category
      where 1=1 and main_category_name=#{main_category_name}
   </select>

   <!-- 소분류 데이터 가져오기 -->
   <select id='getMenuCategory3' resultType="String" parameterType="String"  >
      select   
         distinct sub_category_name      as "sub_category_name"
       from code_menu_category
      where 1=1 and mid_category_name=#{mid_category_name}
   </select>
	
	
	
	
</mapper>