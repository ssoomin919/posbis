<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
	<!-- namespace 속성값으로 [DAO 인터페이스명]이 오며 -->
	<!-- [DAO 인터페이스] 메소드명과 동일한 id 값을 소유한 태그를 내포하고 있다. -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.naver.erp.SalesDAO">

    <sql id="salesWhere">
       <if test="(keyword!=null and keyword.length()>0)">
         and(   upper(s.menu_name) like upper('%${keyword}%')
            or upper(s.menu_price||'') like upper('%${keyword}%')
            or upper((s.menu_price * s.sales_count)||'') like upper('%${keyword}%')
            or upper(to_char(s.sales_date,'yyyy-mm-dd')) like upper('%${keyword}%')
             )
      </if>
               <!-- 만약 sales_date_t1이 있고 sales_date_t2가 없으면 -->
         <if test="(sales_date_t1!=null and sales_date_t1.length()>0) and (sales_date_t2==null or sales_date_t2.length()==0)">
            and(
               to_char(to_date('${sales_date_t1}','yyyy-mm-dd'),'yyyymmdd')=to_char(s.sales_date,'yyyymmdd')
            )
         </if>
      <!-- 만약 sales_date_t2이 있고 sales_date_t1가 없으면 -->
         <if test="(sales_date_t2!=null and sales_date_t2.length()>0) and (sales_date_t1==null or sales_date_t1.length()==0)">
            and(
               to_char(to_date('${sales_date_t2}','yyyy-mm-dd'),'yyyymmdd')=to_char(s.sales_date,'yyyymmdd')
            )
         </if>
               <!-- 만약 sales_date_t1, sales_date_t2 둘다 있으면 -->
         <if test="(sales_date_t2!=null and sales_date_t2.length()>0) and (sales_date_t1!=null and sales_date_t1.length()>0)">
            and(
                  to_char(s.sales_date,'yyyymmdd') >= to_char(to_date('${sales_date_t1}','yyyy-mm-dd'),'yyyymmdd')
                    and
                  to_char(s.sales_date,'yyyymmdd') &lt;= to_char(to_date('${sales_date_t2}','yyyy-mm-dd'),'yyyymmdd')
            )
         </if>
         
         <if test='sales_date=="1"'>
         and(
            to_char(s.sales_date,'yyyymmdd') = to_char(sysdate,'yyyymmdd')
         )
         </if>
         <if test='sales_date=="2"'>
         and(
            to_char(s.sales_date,'yyyymmdd') &lt;= to_char(sysdate,'yyyymmdd') and
            to_char(s.sales_date,'yyyymmdd') >= to_char(sysdate-6,'yyyymmdd')
         )
         </if>
         <if test='sales_date=="3"'>
         and(
            to_char(sysdate,'yyyymm')=to_char(s.sales_date,'yyyymm')
         )
         </if>
               
          <if test="chooseBusinessNo!=null and chooseBusinessNo.length>0">
         and s.business_no in
            <foreach collection="chooseBusinessNo" item="chooseBusinessNo" open="(" close=")"  separator=",">
                  #{chooseBusinessNo}
            </foreach>
         </if>
    </sql>
	
	
	<!--**************************************************************************-->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!--**************************************************************************-->
	   <select id="getSalesList" parameterType="com.naver.erp.SalesSearchDTO" resultType="java.util.HashMap">
      <!-- number 자료형을 문자형으로 바꾸는 이유는 HashMap 객체에 String으로 저장되기 때문이다.  -->
      select * from(select zzz.*, rownum RNUM from(
         select
                b.business_name                         as  "business_name"
             ,s.menu_name                        as  "menu_name"
             ,s.menu_price                    as  "menu_price"
             ,s.sales_count                   as  "sales_count"
             ,(s.menu_price * s.sales_count)    as  "sales_amount"
             ,((s.menu_price * s.sales_count)-(s.menu_cost* s.sales_count))    as  "sales_income"
             ,to_char(s.sales_date,'yyyy-mm-dd (dy) HH:MI PM')     as  "sales_date"
         from sales s, business_info b, user_info u
         where b.business_no = s.business_no and u.user_id=#{user_id,jdbcType=VARCHAR}
         <!-- and s.business_no like '%${changeBusinessNo}%' -->
         <!-- and (s.business_no in (select b.business_no from business_info b where u_no=(select u_no from user_info where user_id=#{user_id}))) -->
        <include refid="salesWhere"/>
         order by ${sort}
      )zzz) where <!-- xml에서 <>는 부등호가 아닌 태그의 시작과 끝이다. <![CDATA[ ]]>로 구문을 감싸면 <>를 태그가 아닌 부등호로 인식 -->
         <![CDATA[
            RNUM>= ${selectPageNo*rowCntPerPage-rowCntPerPage+1}
            and RNUM<= ${selectPageNo*rowCntPerPage}
         ]]>
   </select>
	
	<!--*************************************************************-->
	<!-- 게시판 글 목록 총 개수 구하는  select 태그 선언-->
	<!--*************************************************************-->
	<select id="getSalesListAllCnt" parameterType="com.naver.erp.SalesSearchDTO" resultType="int">
		select 
			count(*) 
		from sales s, business_info b, user_info u
		where b.business_no = s.business_no and u.user_id=#{user_id,jdbcType=VARCHAR}
			<!-- and s.business_no like '%${changeBusinessNo}%' -->
			<!-- and (s.business_no in (select b.business_no from business_info b where u_no=(select u_no from user_info where user_id=#{user_id}))) -->
 		 <include refid="salesWhere"/>	
	</select>
	
	
		
	<!--*************************************************************-->
	<!-- 총 합계 리턴하는 select 태그 선언-->
	<!--*************************************************************-->
	<select id="getSalesSum" parameterType="com.naver.erp.SalesSearchDTO" resultType="java.util.HashMap">
		select 
		    nvl(sum(s.sales_count),0) as "sum_sales_count"
		    ,nvl(sum(s.menu_price * s.sales_count),0) as "sum_sales_amount"
		    ,nvl(sum((s.menu_price * s.sales_count)-(s.menu_cost* s.sales_count)),0) as "sum_sales_income"
		from sales s, business_info b, user_info u
		where b.business_no = s.business_no and u.user_id=#{user_id,jdbcType=VARCHAR}
			<!-- and s.business_no like '%${changeBusinessNo}%' -->
			<!-- and (s.business_no in (select b.business_no from business_info b where u_no=(select u_no from user_info where user_id=#{user_id}))) -->
 		 <include refid="salesWhere"/>	
	</select>
	
	
	
	<!--**************************************************************************-->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!--**************************************************************************-->
	<select id="getMenuSalesList" parameterType="com.naver.erp.MenuSalesSearchDTO" resultType="java.util.HashMap">
		<!-- number 자료형을 문자형으로 바꾸는 이유는 HashMap 객체에 String으로 저장되기 때문이다.  -->
		select * from(select zzz.*, rownum RNUM from(
			select
                  b.business_name                       as  "business_name2"
				 ,s.menu_name            				as  "menu_name2"
				 ,s.menu_price           			as  "menu_price2"
				 ,sum(s.sales_count)          			as  "sales_count2"
				 ,sum(s.menu_price * s.sales_count) 	as  "sales_amount2"
			     ,sum((s.menu_price * s.sales_count)-(s.menu_cost* s.sales_count)) 	as  "sales_income2"
			from sales s, business_info b, user_info u
			where b.business_no = s.business_no and u.user_id=#{user_id,jdbcType=VARCHAR}
				<!-- and s.business_no like '%${changeBusinessNo}%' -->
	 		 <include refid="salesWhere"/>
	 		 	group by b.business_name, s.menu_name, s.menu_price
				order by ${sort}
			)zzz )where <!-- xml에서 <>는 부등호가 아닌 태그의 시작과 끝이다. <![CDATA[ ]]>로 구문을 감싸면 <>를 태그가 아닌 부등호로 인식 -->
			<![CDATA[
				RNUM>= ${selectPageNo*menuRowCntPerPage-menuRowCntPerPage+1}
				and RNUM<= ${selectPageNo*menuRowCntPerPage}
			]]> 

	</select>
	
	<!--*************************************************************-->
	<!-- 게시판 글 목록 총 개수 구하는  select 태그 선언-->
	<!--*************************************************************-->
	<select id="getMenuSalesListAllCnt" parameterType="com.naver.erp.MenuSalesSearchDTO" resultType="int">
		select 
			count(*) from
			(
			select
                  b.business_name                       as  "business_name2"
				 ,s.menu_name            				as  "menu_name2"
				 ,s.menu_price	          				as  "menu_price2"
				 ,sum(s.sales_count)          			as  "sales_count2"
				 ,sum(s.menu_price * s.sales_count) 	as  "sales_amount2"
			    , sum((s.menu_price * s.sales_count)-(s.menu_cost* s.sales_count)) 	as  "sales_income"
			from sales s, business_info b, user_info u
			where b.business_no = s.business_no and u.user_id=#{user_id,jdbcType=VARCHAR}
				<!-- and s.business_no like '%${changeBusinessNo}%' -->
	 		 <include refid="salesWhere"/>
	 		 	group by b.business_name, s.menu_name, s.menu_price
	 		)
	</select>
	
	
	<select id="getMenuSalesSum" parameterType="com.naver.erp.MenuSalesSearchDTO" resultType="java.util.HashMap">
		select 
		    nvl(sum(s.sales_count),0) as "sum_sales_count"
		    ,nvl(sum(s.menu_price * s.sales_count),0) as "sum_sales_amount"
		    ,nvl(sum((s.menu_price * s.sales_count)-(s.menu_cost* s.sales_count)),0) as "sum_sales_income"
		from sales s, business_info b, user_info u
		where b.business_no = s.business_no and u.user_id=#{user_id,jdbcType=VARCHAR}
			<!-- and s.business_no like '%${changeBusinessNo}%' -->
			<!-- and (s.business_no in (select b.business_no from business_info b where u_no=(select u_no from user_info where user_id=#{user_id}))) -->
 		 <include refid="salesWhere"/>	
	</select>
	
	
	
	
<!-- ========================================================================================= -->
	
	<select id='getUserNo' parameterType="String" resultType="int">   
      select u_no from user_info where user_id=#{user_id}
   </select>
   
   
<!-- ========================================================================================= -->
   <select id='getBusinessNoList' parameterType="int" resultType="java.util.HashMap">   
      select 
         business_no as "business_no" 
         , business_name as "business_name"
      from business_info 
         where 
            1=1 
            and u_no=#{u_no}
   </select>
   
   <!-- ========================================================================================= -->
   <select id='getSalesNow' parameterType="int" resultType="java.util.HashMap">   
	
<!-- 	select
	    to_char(sales_date,'yyyy.mm')   as "now_sales_date"
	    ,sum(menu_price * sales_count)||'' 	as  "now_sales_amount"
	    ,sum((menu_price * sales_count)-(menu_cost* sales_count))||'' 	as  "now_sales_income"
	    ,count(*) 	as  "now_sales_count"
	from sales
	where business_no in (select business_no from business_info where u_no = #{u_no})
	group by to_char(sales_date,'yyyy.mm')
		having (to_char(sales_date,'yyyy.mm') = to_char(add_months(sysdate,-12),'yyyy.mm') )  or (to_char(sales_date,'yyyy.mm') = to_char(add_months(sysdate,-1),'yyyy.mm') )
	order by to_char(sales_date,'yyyy.mm')
	 -->
	
	select
	    mon.month   as "now_sales_date"
	    ,nvl(sum(s.menu_price * s.sales_count),0) 	as  "now_sales_amount"
	    ,nvl(sum((s.menu_price * s.sales_count)-(s.menu_cost* s.sales_count)),0) 	as  "now_sales_income"
	    ,nvl(count(*),0) 	as  "now_sales_count"
    from sales s right outer join
    (
        select to_char(sysdate,'yyyy.mm') "MONTH" from dual
        union select to_char(add_months(sysdate,-1),'yyyy.mm') from dual
    ) mon on to_char(s.sales_date,'yyyy.mm') = mon.month
     and s.business_no in (select business_no from business_info where u_no = #{u_no})    
	group by to_char(s.sales_date,'yyyy.mm'),mon.month
	order by to_char(s.sales_date,'yyyy.mm')
	
   </select>
	
   <select id='getSalesWeek' parameterType="int" resultType="java.util.HashMap">  
   
<!--    select
	    to_char(sales_date,'mm.dd (dy)') as "sales_week"
	    ,sum(menu_price * sales_count) as "sales_amount_week"
	from sales
	where business_no in (select business_no from business_info where u_no = #{u_no})
	group by sales_date
		having to_char(sales_date,'yyyy-mm-dd dy')>to_char(sysdate-7,'yyyy-mm-dd dy')
	order by to_char(sales_date,'yyyy-mm-dd')
	 -->
	
	select
	    to_char(dy.day,'mm.dd (dy)') as "sales_week"
	    ,nvl(sum(s.menu_price * s.sales_count),0) as "sales_amount_week"
	from sales s right outer join
    (
        select sysdate-6 "DAY" from dual
        union select sysdate-5 from dual
        union select sysdate-4 from dual
        union select sysdate-3 from dual
        union select sysdate-2 from dual
        union select sysdate-1 from dual
        union select sysdate from dual
    ) dy on to_char(dy.day,'yyyy-mm-dd')=to_char(s.sales_date,'yyyy-mm-dd')
     and s.business_no in (select business_no from business_info where u_no = #{u_no})
    group by to_char(s.sales_date,'yyyy-mm-dd'), dy.day
    order by dy.day
	
   </select>
   
   <insert id="insertSales" parameterType="com.naver.erp.SalesDTO" >
		
	insert into sales(
            business_no
            , business_type_code
            , addr_no
            , menu_no
            , menu_name
            , menu_category_code
            , menu_price
            , menu_cost
            , sales_count
            , sales_date
    )values(
            (select business_no from business_info where business_no=#{business_no})
            ,(select business_type_code from business_info where business_no=#{business_no})
            ,(select addr_no from business_info where business_no=#{business_no})
            ,(select menu_no from menu where menu_no=#{menu_no})
            ,(select menu_name from menu where menu_no=#{menu_no})
            ,(select menu_category_code from menu where menu_no=#{menu_no})
            ,(select menu_price from menu where menu_no=#{menu_no})
            ,(select menu_cost from menu where menu_no=#{menu_no})
            ,4
            ,sysdate
   		
	</insert>
	
	
	
	<!-- 마케팅폼!! 새로한거 !!!!!!! -->
   
   <!--**************************************************************************-->
   <!-- 세트메뉴 추천 리스트 구하는 select 태그 -->
   <!--**************************************************************************-->
      <select id="getSetMenuList" parameterType="com.naver.erp.MarketingDTO" resultType="java.util.HashMap">
      select * from (
          select
             busi_type_code                     "BUSI_CODE"
              ,busi_type_name1                        "BUSI_TYPE1"
              ,busi_type_name2                        "BUSI_TYPE2"
              ,menu_name1||' &amp; '||menu_name2      "SET_MENU"
              ,count(*)||''                           "SALES_CNT"
              ,to_char(  DENSE_RANK() OVER (PARTITION BY busi_type_code ORDER BY count(*) desc)  ) "RANKING"
      from(
              select
                 c.business_type_code                  "BUSI_TYPE_CODE"
                  ,c.business_type_name1                     "BUSI_TYPE_NAME1"
                  ,c.business_type_name2                     "BUSI_TYPE_NAME2"
                  ,s1.menu_name                              "MENU_NAME1"
                  ,s2.menu_name                              "MENU_NAME2"
                  ,s1.sales_date                        "SALES_DATE"
              from sales s1, sales s2, business_info b, code_business_type c, user_info u
              where
                  s1.sales_date = s2.sales_date
                  and (s1.menu_name>s2.menu_name)
              <if test='dataArea!=null'>
                 <if test='dataArea.equals("myStore")'>
                     and b.business_no = #{changeBusinessNo}
                 </if>
              </if>
                  and s1.business_no = s2.business_no
                  and b.business_no = s1.business_no
                  and b.business_type_code = c.business_type_code
                  and u.user_id=#{user_id,jdbcType=VARCHAR}
                <if test="changeBusinessNo!=null">
                  and b.business_type_code = (select business_type_code from business_info where business_no = #{changeBusinessNo})
                </if>
              group by c.business_type_code, c.business_type_name1, c.business_type_name2, s1.menu_name, s2.menu_name, s1.sales_date
          )
          group by busi_type_code, busi_type_name1, busi_type_name2, menu_name1||' &amp; '||menu_name2)
      where ranking&lt;=5
   </select>
   
	
</mapper>	

	